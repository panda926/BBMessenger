<bs:BaseWindow
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:toolkit="http://schemas.microsoft.com/wpf/2008/toolkit"
    xmlns:gif="http://wpfanimatedgif.codeplex.com"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:tb="http://www.hardcodet.net/taskbar"
    xmlns:controls="clr-namespace:ControlExs;assembly=ControlExs"
    Style="{DynamicResource MainWindowStyle}" Topmost="False"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"  
    xmlns:bs="clr-namespace:ChatClient"
    xmlns:UIControls_SplitButton="clr-namespace:UIControls.SplitButton;assembly=UIControls"
    xmlns:ee="http://schemas.microsoft.com/expression/2010/effects"
    xmlns:vsm="clr-namespace:System.Windows;assembly=WPFToolkit"
    WindowStyle="None" AllowsTransparency="True"
    x:Class="ChatClient.Main"
    Height="615" Width="297" MinHeight="615" MinWidth="297" MaxHeight="615" MaxWidth="297" WindowStartupLocation="CenterScreen" ResizeMode="NoResize" Loaded="Window_Loaded" Closing="Window_Closing" Title="HBMessenger" Icon="/Resources;component/kuaikuai.ico" ShowInTaskbar="True">
    
    <Window.Resources>        
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!--<ResourceDictionary Source="StyleTheme/Generic.xaml" />
                <ResourceDictionary Source="StyleTheme/Default.xaml" />-->
                <ResourceDictionary Source="Showcase/NotifyIconResources.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Storyboard x:Key="StoryMember">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="allMainCustomerPan" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="-270"/>
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="StoryRoom">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="roomPan" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="270"/>
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="StoryGame">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="allGamePan" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="270"/>
                    <SplineDoubleKeyFrame KeyTime="00:00:0.2000000" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="pnfStoryboard1">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="pnfPanel" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="267"/>
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <!--<Storyboard x:Key="StoryClass">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="classPan" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="270"/>
                    <SplineDoubleKeyFrame KeyTime="00:00:0.2000000" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>-->

            <Style TargetType="{x:Type toolkit:DataGridColumnHeader}" x:Key="columnHeaderStyle">
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="Height" Value="20" />
                <Setter Property="SeparatorBrush" Value="DarkRed" />
                <Setter Property="FontWeight" Value="Black" />
                <Setter Property="Foreground" Value="#323433" />
                <Setter Property="Template">                
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type toolkit:DataGridColumnHeader}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Border x:Name="columnHeaderBorder" BorderThickness="0,1,0,1" >
                                    <Border.BorderBrush>
                                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                            <GradientStop Offset="0" Color="#239ee2" />
                                            <GradientStop Offset="1" Color="#239ee2" />
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                            <GradientStop Offset="0" Color="#3ea7e1" />                                            
                                            <GradientStop Offset="1" Color="#0992de" />
                                        </LinearGradientBrush>                                        
                                    </Border.Background>
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <!--<Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="MinWidth" Value="0" />
                <Setter Property="MinHeight" Value="28" />
                <Setter Property="Foreground" Value="#323433" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type toolkit:DataGridColumnHeader}">
                            <Border x:Name="BackgroundBorder" BorderThickness="0,1,0,1" 
                             BorderBrush="#e6dbba" 
                              Width="Auto">
                                <Grid >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter  Margin="0,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                    <Path x:Name="SortArrow" Visibility="Collapsed" Data="M0,0 L1,0 0.5,1 z" Stretch="Fill"  Grid.Column="2" Width="8" Height="6" Fill="White" Margin="0,0,50,0" 
                                        VerticalAlignment="Center" RenderTransformOrigin="1,1" />
                                    <Rectangle Width="1" Fill="#d6c79b" HorizontalAlignment="Right" Grid.ColumnSpan="1" />
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Height" Value="25"/>-->
            </Style>

            <Style TargetType="{x:Type toolkit:DataGridRow}" x:Key="rowStyle">                
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type toolkit:DataGridRow}">
                            <Border x:Name="DGR_Border" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="Transparent" SnapsToDevicePixels="True">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <GradientStop Offset="0" Color="Transparent" />
                                        <GradientStop Offset="1" Color="Transparent" />
                                    </LinearGradientBrush>
                                </Border.Background>
                                <toolkit:SelectiveScrollingGrid>
                                    <toolkit:SelectiveScrollingGrid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </toolkit:SelectiveScrollingGrid.ColumnDefinitions>
                                    <toolkit:SelectiveScrollingGrid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                    </toolkit:SelectiveScrollingGrid.RowDefinitions>
                                    <toolkit:DataGridCellsPresenter Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    <toolkit:DataGridDetailsPresenter Grid.Row="1" Grid.Column="1" toolkit:SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding  AreRowDetailsFrozen, ConverterParameter={x:Static toolkit:SelectiveScrollingOrientation.Vertical}, Converter={x:Static toolkit:DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type toolkit:DataGrid}}}" Visibility="{TemplateBinding DetailsVisibility}" />
                                    <toolkit:DataGridRowHeader Grid.RowSpan="2" toolkit:SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static toolkit:DataGridHeadersVisibility.Row}, Converter={x:Static toolkit:DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type toolkit:DataGrid}}}" />
                                </toolkit:SelectiveScrollingGrid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type toolkit:DataGridCell}" x:Key="cellStyle">
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type toolkit:DataGridCell}">                            
                           <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>                            
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <!--<Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" >
                            <Setter.Value>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#B2FFFFFF" Offset="0"/>
                                    <GradientStop Offset="1"/>
                                    <GradientStop Color="#55FFFFFF" Offset="0.257"/>
                                    <GradientStop Color="Transparent" Offset="0.493"/>
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Foreground" Value="Black"/>
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="0.1"/>
                    </Trigger>
                </Style.Triggers>-->
            </Style>

            <Style x:Key="Mouseover_SplitButton" TargetType="{x:Type UIControls_SplitButton:SplitButton}">
                <Setter Property="FocusVisualStyle">
                    <Setter.Value>
                        <Style>
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Rectangle Margin="3" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="Foreground" Value="#FF333333"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type UIControls_SplitButton:SplitButton}">
                            <Grid x:Name="grid" Margin="-2,0,0,0" RenderTransformOrigin="0.5,0.5">
                                <Grid.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Grid.RenderTransform>
                                <vsm:VisualStateManager.VisualStateGroups>
                                    <vsm:VisualStateGroup x:Name="CommonStates">
                                        <vsm:VisualState x:Name="Normal"/>
                                        <vsm:VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverStyle">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.795"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </vsm:VisualState>
                                        <vsm:VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="grid">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="2"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="grid">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="2"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </vsm:VisualState>
                                        <vsm:VisualState x:Name="Disabled"/>
                                    </vsm:VisualStateGroup>
                                    <vsm:VisualStateGroup x:Name="FocusStates">
                                        <vsm:VisualState x:Name="Unfocused"/>
                                        <vsm:VisualState x:Name="Focused"/>
                                    </vsm:VisualStateGroup>
                                    <vsm:VisualStateGroup x:Name="ValidationStates">
                                        <vsm:VisualState x:Name="Valid"/>
                                        <vsm:VisualState x:Name="InvalidFocused"/>
                                        <vsm:VisualState x:Name="InvalidUnfocused"/>
                                    </vsm:VisualStateGroup>
                                </vsm:VisualStateManager.VisualStateGroups>
                                <Border x:Name="MouseOverStyle" BorderBrush="#FF666666" BorderThickness="1" Margin="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Panel.ZIndex="5" Opacity="0">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#B2FFFFFF" Offset="0"/>
                                            <GradientStop Offset="1"/>
                                            <GradientStop Color="#55FFFFFF" Offset="0.257"/>
                                            <GradientStop Color="Transparent" Offset="0.493"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                                <Border x:Name="border" BorderBrush="White" BorderThickness="1" Margin="1" Opacity="0"/>


                                <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="4,2">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="11"/>
                                    </Grid.ColumnDefinitions>

                                    <Border x:Name="outerBorder1" Grid.ColumnSpan="2" BorderBrush="{x:Null}" Background="{x:Null}">
                                        <Border.Style>
                                            <Style TargetType="{x:Type Border}">
                                                <Setter Property="Focusable" Value="False"/>
                                                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                                <Setter Property="VerticalAlignment" Value="Stretch"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="CornerRadius" Value="2"/>
                                                <Setter Property="SnapsToDevicePixels" Value="True"/>
                                                <Setter Property="BorderBrush" Value="Transparent"/>
                                                <Setter Property="Background" Value="Transparent"/>
                                            </Style>
                                        </Border.Style>
                                        <Border x:Name="innerBorder1" Background="{x:Null}" BorderBrush="{x:Null}">
                                            <Border.Style>
                                                <Style TargetType="{x:Type Border}">
                                                    <Setter Property="Focusable" Value="False"/>
                                                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                                    <Setter Property="VerticalAlignment" Value="Stretch"/>
                                                    <Setter Property="BorderThickness" Value="1"/>
                                                    <Setter Property="CornerRadius" Value="2"/>
                                                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                                                    <Setter Property="BorderBrush" Value="Transparent"/>
                                                    <Setter Property="Background" Value="Transparent"/>
                                                </Style>
                                            </Border.Style>
                                        </Border>
                                    </Border>
                                    <Border x:Name="outerBorder2" Grid.Column="1" Margin="-1,0,0,0" Background="{x:Null}" BorderBrush="{x:Null}">
                                        <Border.Style>
                                            <Style TargetType="{x:Type Border}">
                                                <Setter Property="Focusable" Value="False"/>
                                                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                                <Setter Property="VerticalAlignment" Value="Stretch"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="CornerRadius" Value="2"/>
                                                <Setter Property="SnapsToDevicePixels" Value="True"/>
                                                <Setter Property="BorderBrush" Value="Transparent"/>
                                                <Setter Property="Background" Value="Transparent"/>
                                            </Style>
                                        </Border.Style>
                                        <Border x:Name="innerBorder2" BorderBrush="{x:Null}" Background="{x:Null}">
                                            <Border.Style>
                                                <Style TargetType="{x:Type Border}">
                                                    <Setter Property="Focusable" Value="False"/>
                                                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                                    <Setter Property="VerticalAlignment" Value="Stretch"/>
                                                    <Setter Property="BorderThickness" Value="1"/>
                                                    <Setter Property="CornerRadius" Value="2"/>
                                                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                                                    <Setter Property="BorderBrush" Value="Transparent"/>
                                                    <Setter Property="Background" Value="Transparent"/>
                                                </Style>
                                            </Border.Style>
                                        </Border>
                                    </Border>
                                    <Border x:Name="Bd" HorizontalAlignment="Stretch" Padding="2,3" VerticalAlignment="Stretch">
                                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                    <Path x:Name="path" Grid.Column="1" Data="M0,0L3,3 6,0z" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Left" Margin="3,1,0,0" Stroke="{TemplateBinding Foreground}" VerticalAlignment="Center"/>
                                    <Button x:Name="PART_DropDown" BorderBrush="{TemplateBinding BorderBrush}" Grid.Column="1" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="Left" IsDefault="{TemplateBinding IsDefault}" Margin="1.083,0,0,0" VerticalAlignment="Stretch" Width="10.917" Opacity="0" Background="{x:Null}">
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Foreground" Value="White"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Border x:Name="outerBorder" Background="{x:Null}" BorderBrush="{x:Null}">
                                                                <Border.Style>
                                                                    <Style TargetType="{x:Type Border}">
                                                                        <Setter Property="Focusable" Value="False"/>
                                                                        <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                                                        <Setter Property="VerticalAlignment" Value="Stretch"/>
                                                                        <Setter Property="BorderThickness" Value="1"/>
                                                                        <Setter Property="CornerRadius" Value="2"/>
                                                                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                                                                        <Setter Property="BorderBrush" Value="Transparent"/>
                                                                        <Setter Property="Background" Value="Transparent"/>
                                                                    </Style>
                                                                </Border.Style>
                                                                <Border x:Name="innerBorder" Background="{x:Null}" BorderBrush="{x:Null}">
                                                                    <Border.Style>
                                                                        <Style TargetType="{x:Type Border}">
                                                                            <Setter Property="Focusable" Value="False"/>
                                                                            <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                                                            <Setter Property="VerticalAlignment" Value="Stretch"/>
                                                                            <Setter Property="BorderThickness" Value="1"/>
                                                                            <Setter Property="CornerRadius" Value="2"/>
                                                                            <Setter Property="SnapsToDevicePixels" Value="True"/>
                                                                            <Setter Property="BorderBrush" Value="Transparent"/>
                                                                            <Setter Property="Background" Value="Transparent"/>
                                                                        </Style>
                                                                    </Border.Style>
                                                                    <Path Grid.Column="2" Data="M0,0L3,3 6,0z" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Center" Margin="0,1,0,0" Stroke="{TemplateBinding Foreground}" VerticalAlignment="Center"/>
                                                                </Border>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Style" TargetName="outerBorder">
                                                                        <Setter.Value>
                                                                            <Style TargetType="{x:Type Border}">
                                                                                <Setter Property="Focusable" Value="False"/>
                                                                                <Setter Property="BorderThickness" Value="2,2,2,1"/>
                                                                                <Setter Property="BorderBrush" Value="#66000000"/>
                                                                                <Setter Property="Background" Value="#33000000"/>
                                                                                <Style.BasedOn>
                                                                                    <Style TargetType="{x:Type Border}">
                                                                                        <Setter Property="Focusable" Value="False"/>
                                                                                        <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                                                                        <Setter Property="VerticalAlignment" Value="Stretch"/>
                                                                                        <Setter Property="BorderThickness" Value="1"/>
                                                                                        <Setter Property="CornerRadius" Value="2"/>
                                                                                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                                                                                        <Setter Property="BorderBrush" Value="Transparent"/>
                                                                                        <Setter Property="Background" Value="Transparent"/>
                                                                                    </Style>
                                                                                </Style.BasedOn>
                                                                            </Style>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter Property="Style" TargetName="innerBorder">
                                                                        <Setter.Value>
                                                                            <Style TargetType="{x:Type Border}">
                                                                                <Setter Property="BorderBrush" Value="{x:Null}"/>
                                                                                <Setter Property="Focusable" Value="False"/>
                                                                                <Setter Property="Background" Value="{x:Null}"/>
                                                                                <Style.BasedOn>
                                                                                    <Style TargetType="{x:Type Border}">
                                                                                        <Setter Property="Focusable" Value="False"/>
                                                                                        <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                                                                        <Setter Property="VerticalAlignment" Value="Stretch"/>
                                                                                        <Setter Property="BorderThickness" Value="1"/>
                                                                                        <Setter Property="CornerRadius" Value="2"/>
                                                                                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                                                                                        <Setter Property="BorderBrush" Value="Transparent"/>
                                                                                        <Setter Property="Background" Value="Transparent"/>
                                                                                    </Style>
                                                                                </Style.BasedOn>
                                                                            </Style>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Foreground" Value="#FFADADAD"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                </Grid>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="#FFADADAD"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </Window.Resources>


    <Grid>
        <tb:TaskbarIcon x:Name="MyNotifyIcon" IconSource="kuaikuai.ico" TrayMouseDoubleClick="MyNotifyIcon_TrayMouseDoubleClick">
            <tb:TaskbarIcon.ContextMenu>
                <ContextMenu>
                    <!--<MenuItem Header="GIT" x:Name="showItem" Click="showItem_Click" >
                        <MenuItem.Icon>
                            <Image>
                                <Image.Source>
                                    <BitmapImage UriSource="/Resources;component/image/kuaikuai.ico" />
                                </Image.Source>
                            </Image>
                        </MenuItem.Icon>
                    </MenuItem>-->
                    <MenuItem Header="我在线上" x:Name="notify_iconImonline" Click="notify_iconImonline_Click">
                        <MenuItem.Icon>
                            <Image>
                                <Image.Source>
                                    <BitmapImage UriSource="Icons/imonline.ico" />
                                </Image.Source>
                            </Image>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="离线" x:Name="notify_iconImoffline" Click="notify_iconImoffline_Click">
                        <MenuItem.Icon>
                            <Image>
                                <Image.Source>
                                    <BitmapImage UriSource="Icons/imoffline.ico" />
                                </Image.Source>
                            </Image>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="忙碌" x:Name="notify_iconImbusy" Click="notify_iconImbusy_Click">
                        <MenuItem.Icon>
                            <Image>
                                <Image.Source>
                                    <BitmapImage UriSource="Icons/busy.ico" />
                                </Image.Source>
                            </Image>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="离开" x:Name="notify_iconImaway" Click="notify_iconImaway_Click">
                        <MenuItem.Icon>
                            <Image Source="Icons/away.ico"></Image>
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator />
                    <MenuItem Header="退出" Click="MenuItem_Click" >
                        <!--<MenuItem.Icon>
                            <Image>
                                <Image.Source>
                                    <BitmapImage UriSource="/Resources;component/image/dot2.png" />
                                </Image.Source>
                            </Image>
                        </MenuItem.Icon>-->
                    </MenuItem>
                </ContextMenu>
            </tb:TaskbarIcon.ContextMenu>
            <!--<tb:TaskbarIcon.TrayToolTip>
                <Border Background="White" BorderBrush="LightBlue" BorderThickness="2" CornerRadius="4" Opacity="0.8" Width="160" Height="40">
                    <TextBlock x:Name="toolTip" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="Black" />
                </Border>
            </tb:TaskbarIcon.TrayToolTip>-->
        </tb:TaskbarIcon>

        <Grid Height="84" Margin="0,30,0,0" Name="grid1" VerticalAlignment="Top">
            
            
            
            <Grid HorizontalAlignment="Left" Width="74" Height="74" Margin="16,-8,0,10">
                <Ellipse HorizontalAlignment="Center" VerticalAlignment="Center" Name="memberImg" Stroke="White" Width="70" Height="70" StrokeThickness="2" MouseDown="memberImg_MouseDown" Cursor="Hand" />
                <!--<Image HorizontalAlignment="Right" Margin="1" VerticalAlignment="Bottom" Width="12" Height="12" x:Name="imgUserState" Source="/Resources;component/Icons/imonline.ico" />-->
                <UIControls_SplitButton:SplitButton Mode="Dropdown" Placement="Bottom" Style="{DynamicResource Mouseover_SplitButton}"
								VerticalAlignment="Bottom" 
								HorizontalAlignment="Right" Margin="0,0,-13,-5" Focusable="False" Background="{x:Null}"  >
                    <UIControls_SplitButton:SplitButton.Content>
                        <StackPanel Orientation="Horizontal">
                            <Image Source="/Resources;component/Icons/imonline.ico" Tag="" x:Name="imgLoginState" Width="11" Height="11">
                                <Image.Effect>
                                    <ee:SharpenEffect Amount="0" Height="0"/>
                                </Image.Effect>
                            </Image>
                        </StackPanel>
                    </UIControls_SplitButton:SplitButton.Content>
                    <MenuItem Header="我在线上" Tag="imonline" Name="menuImOnline">
                        <MenuItem.Icon>
                            <Image Source="/Resources;component/Icons/imonline.ico" Height="10" Width="10">
                                <Image.Effect>
                                    <ee:SharpenEffect Amount="0" Height="0"/>
                                </Image.Effect>
                            </Image>
                        </MenuItem.Icon>
                    </MenuItem>                                        
                    <MenuItem Header="离开" Tag="away" Name="menuImAway">
                        <MenuItem.Icon>
                            <Image Source="/Resources;component/Icons/away.ico" Height="10" Width="10">
                                <Image.Effect>
                                    <ee:SharpenEffect Amount="0" Height="0"/>
                                </Image.Effect>
                            </Image>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="忙碌" Tag="busy" Name="ImBusy">
                        <MenuItem.Icon>
                            <Image Source="/Resources;component/Icons/busy.ico" Height="10" Width="10">
                                <Image.Effect>
                                    <ee:SharpenEffect Amount="0" Height="0"/>
                                </Image.Effect>
                            </Image>
                        </MenuItem.Icon>
                    </MenuItem>                                   
                    <MenuItem Header="离线" Tag="offline" Name="ImOffline">
                        <MenuItem.Icon>
                            <Image Source="/Resources;component/Icons/imoffline.ico" Height="10" Width="10"/>
                        </MenuItem.Icon>
                    </MenuItem>                    
                </UIControls_SplitButton:SplitButton>
            </Grid>
            
            <Grid Height="26" Margin="103,0,10,3" Name="grid4" VerticalAlignment="Bottom">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.147*" />
                    <ColumnDefinition Width="0.147*" />
                    <ColumnDefinition Width="0.147*" />
                    <ColumnDefinition Width="0.2*" />
                    <ColumnDefinition Width="0.147*" />
                    <ColumnDefinition Width="0.147" />
                </Grid.ColumnDefinitions>
                <bs:QuickButton x:Name="btnPayment" Cursor="Hand" Width="25" Height="25" ToolTip="钱包" Click="btnPayment_Click">                    
                </bs:QuickButton>
                <!--<WindowsFormsHost Name="Host1" Width="25">
                    <WindowsFormsHost.Background>
                        <ImageBrush ImageSource="/Resources;component/image/menu3.gif"/>
                    </WindowsFormsHost.Background>
                    <controls:QQGlassButton x:Name="btnPayment" Cursor="Hand" Width="25" Height="22" MouseDown="chargeBt_MouseUp" ToolTipText="钱包">
                    </controls:QQGlassButton>
                </WindowsFormsHost>-->
                <bs:QuickButton x:Name="btnMyInfo" Cursor="Hand" Width="25" Height="25" ToolTip="个人资料" Grid.Column="1" Click="btnMyInfo_Click">
                </bs:QuickButton>
                <!--<WindowsFormsHost Name="Host2" Grid.Column="1" Width="25">
                    <WindowsFormsHost.Background>
                        <ImageBrush ImageSource="/Resources;component/image/menu2.gif"/>
                    </WindowsFormsHost.Background>
                    <controls:QQGlassButton x:Name="btnMyInfo" Cursor="Hand" Width="25" Height="22" MouseDown="button2_MouseUp" ToolTipText="个人资料">
                    </controls:QQGlassButton>
                </WindowsFormsHost>-->
                <bs:QuickButton x:Name="btnSendMessage" Cursor="Hand" Width="25" Height="25" ToolTip="账号申请" Grid.Column="2" Click="btnSendMessage_Click" >
                </bs:QuickButton>
                <!--<WindowsFormsHost Name="Host3" Grid.Column="2" Width="25">
                    <WindowsFormsHost.Background>
                        <ImageBrush ImageSource="/Resources;component/image/menu5.gif"/>
                    </WindowsFormsHost.Background>
                    <controls:QQGlassButton x:Name="btnSendMessage" Cursor="Hand" Width="25" Height="22" MouseDown="button4_MouseUp" ToolTipText="投诉">
                    </controls:QQGlassButton>
                </WindowsFormsHost>-->
                <bs:QuickButton x:Name="btnReceiveMessage" Cursor="Hand" Width="35" Height="25" ToolTip="站长投诉" Grid.Column="3" Click="btnReceiveMessage_Click" Visibility="Hidden">
                </bs:QuickButton>
                <!--<WindowsFormsHost Name="Host4" Grid.Column="3" Width="25">
                    <WindowsFormsHost.Background>
                        <ImageBrush ImageSource="/Resources;component/image/menu6.gif"/>
                    </WindowsFormsHost.Background>
                    <controls:QQGlassButton x:Name="btnReceiveMessage" Cursor="Hand" Width="25" Height="22" MouseDown="button3_MouseUp" ToolTipText="短消息">
                    </controls:QQGlassButton>
                </WindowsFormsHost>-->
                <!--<Image Source="/Resources;component/image/menu3.gif"  Name="chargeBt" MouseUp="chargeBt_MouseUp" ToolTip="充值" Cursor="Hand" Margin="0.333,0,0.663,0"  />-->
                <!--<Image Source="/Resources;component/image/menu2.gif"  Name="button2"  ToolTip="我的信息" Cursor="Hand" Grid.Column="1" MouseUp="button2_MouseUp" Margin="0.666,0,-0.002,0" />-->
                <!--<Image Source="/Resources;component/image/menu6.gif" ToolTip="信息" Cursor="Hand" Grid.Column="3"  Name="button3" MouseUp="button3_MouseUp" Margin="7.662,0.417,0,1.583" HorizontalAlignment="Left" Width="25.92" />-->
                <!--<Image Source="/Resources;component/image/menu5.gif" Grid.Column="2" Name="button4" ToolTip="短信" Cursor="Hand" MouseUp="button4_MouseUp" Margin="1.518,0.17,0,1.17" HorizontalAlignment="Left" Width="33.67" />-->
                <!--<Label Margin="0" Name="boradlabel" Grid.Column="3" Foreground="Black" />-->
                <bs:QuickButton x:Name="btnStyleChange" Cursor="Hand" Width="35" Height="25" ToolTip="更换皮肤" Grid.Column="4" Click="btnStyleChange_Click">
                </bs:QuickButton>
                <Label Foreground="Black" Margin="-7.21,-5.333,29.162,-2.667" Name="noticelabel" Grid.Column="3" RenderTransformOrigin="-1.082,0.5" />
            </Grid>
            <Grid Height="26" Margin="100,-10,7,0" Name="grid3" VerticalAlignment="Top">
                <Label Name="nickName" Foreground="Black" Margin="0,0,0,0" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Left">
                    <Label.Effect>
                        <DropShadowEffect Color="White" ShadowDepth="1" Direction="297" BlurRadius="7"/>
                    </Label.Effect>
                </Label>
            </Grid>
            <Grid Margin="100,35,7,32">
                <StackPanel Height="Auto" Width="Auto" Orientation="Horizontal">
                    <Image Source="/Resources;component/image/GoldCoin.jpg" Stretch="Fill" Width="16" Height="16" HorizontalAlignment="Center" Margin="1" VerticalAlignment="Center" Opacity="0.7" ToolTip="金币"/>
                    <TextBlock x:Name="txtCash" Text="1000"  TextWrapping="NoWrap"  Foreground="Black" VerticalAlignment="Center" Margin="2,0,0,0"  HorizontalAlignment="Left" FontSize="10" />
                    <Image Source="/Resources;component/image/gamePointIcon.png" Stretch="Fill" Width="16" Height="16" HorizontalAlignment="Center" Margin="10,0,0,0" VerticalAlignment="Center" Opacity="0.6" ToolTip="积分"/>
                    <TextBlock x:Name="txtPoint" Text="1000"  TextWrapping="NoWrap"  Foreground="Black" VerticalAlignment="Center" Margin="2,0,0,0"  HorizontalAlignment="Left" FontSize="10"/>
                    <Image Source="/Resources;component/image/Renminbi.png" Stretch="Fill" Width="16" Height="16" HorizontalAlignment="Center" Margin="10,0,0,0" VerticalAlignment="Center" Opacity="0.6" ToolTip="现金"/>
                    <TextBlock x:Name="txtRenminbi" Text="1000"  TextWrapping="NoWrap"  Foreground="Black" VerticalAlignment="Center" Margin="2,0,0,0"  HorizontalAlignment="Left" FontSize="10"/>
                </StackPanel>
            </Grid>
            
            <Grid Margin="100,14,10,49" Name="grid5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="144*" />
                    <ColumnDefinition Width="24*" />
                </Grid.ColumnDefinitions>
                <RichTextBox Name="singBox" Cursor="Hand" FontSize="12" VerticalAlignment="Bottom" Style="{DynamicResource Head_RichTextBoxStyle}" Grid.ColumnSpan="2" PreviewKeyUp="singBox_PreviewKeyUp" MouseEnter="singBox_MouseEnter" GotFocus="singBox_GotFocus" LostFocus="singBox_LostFocus">
                    <!--<FlowDocument>
                        <Paragraph>
                            <Run  Text="编辑个性签名"/>
                        </Paragraph>
                    </FlowDocument>-->
                </RichTextBox>
            </Grid>
        </Grid>
        <Grid Margin="5,114,5,0" Name="grid2">
            <TabControl Margin="0,0,0,34" Name="tabControl1" SelectionChanged="tabControl1_SelectionChanged" Background="Transparent" >                
                <TabControl.Resources>
                    <Style TargetType="{x:Type TabControl}">
                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                        <Setter Property="BorderBrush">
                            <Setter.Value>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#B2FFFFFF" Offset="0"/>
                                    <GradientStop Offset="1"/>
                                    <GradientStop Color="#55FFFFFF" Offset="0.257"/>
                                    <GradientStop Color="Transparent" Offset="0.493"/>
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style TargetType="{x:Type TabItem}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TabItem}">
                                    <Grid>
                                        <Border Name="Border" Margin="0,0,0,0" Background="Transparent" BorderBrush="Transparent" BorderThickness="0.3" CornerRadius="3">
                                            <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" 
                                                              HorizontalAlignment="Center"
                                                              ContentSource="Header" Margin="12,2,12,2"
                                                              RecognizesAccessKey="True">
                                                <!--<ContentPresenter.LayoutTransform>
                                                    <RotateTransform Angle="270" />
                                                </ContentPresenter.LayoutTransform>-->
                                            </ContentPresenter>
                                        </Border>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Panel.ZIndex" Value="100" />
                                            <Setter TargetName="Border" Property="Background">
                                                <Setter.Value>
                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                        <GradientStop Color="#B2FFFFFF" Offset="0"/>
                                                        <GradientStop Offset="1"/>
                                                        <GradientStop Color="#55FFFFFF" Offset="0.257"/>
                                                        <GradientStop Color="Transparent" Offset="0.493"/>
                                                    </LinearGradientBrush>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter TargetName="Border" Property="BorderThickness" Value="0.3" />
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <!--<Setter TargetName="Border" Property="Background" Value="DarkRed" />
                                            <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
                                            <Setter Property="Foreground" Value="DarkGray" />-->
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TabControl.Resources>
                <TabItem FocusVisualStyle="{x:Null}" Width="95" ToolTip="宝贝专区">
                    <TabItem.Header>
                        <Image Source="/Resources;Component/image/friend.png"  Width="20" Height="20" VerticalAlignment="Center"/>
                    </TabItem.Header>
                    <Grid>
                        <ScrollViewer HorizontalScrollBarVisibility="Auto"  VerticalScrollBarVisibility="Auto" Style="{DynamicResource ScrollViewerStyle}">
                            <StackPanel Margin="0" Name="allMainCustomerPan" RenderTransformOrigin="0.5,0.5" ScrollViewer.CanContentScroll="True" Orientation="Vertical">
                                <StackPanel.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </StackPanel.RenderTransform>                                
                                <!--<Expander FocusVisualStyle="{x:Null}" Header="图片区" FontFamily="Microsoft YaHei" Name="temp1" VerticalAlignment="Top" Template="{DynamicResource SimpleExpanderTemp}" OverridesDefaultStyle="True" FontSize="12">
                                    <Grid>
                                        <StackPanel Name="allCustomerPan">
                                            <StackPanel.Background>
                                                <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                    <GradientStop Color="#B2FFFFFF" Offset="0"/>
                                                    <GradientStop Offset="1"/>
                                                    <GradientStop Color="#55FFFFFF" Offset="0.257"/>
                                                    <GradientStop Color="Transparent" Offset="0.493"/>
                                                </LinearGradientBrush>
                                            </StackPanel.Background>
                                        </StackPanel>
                                    </Grid>
                                </Expander>-->
                            </StackPanel>
                        </ScrollViewer>
                        <StackPanel Height="100" HorizontalAlignment="Right" Margin="0,-11,-158,0" Name="stackPanel1" VerticalAlignment="Top" Width="200" />
                    </Grid>
                </TabItem>
                <TabItem FocusVisualStyle="{x:Null}" Width="0" Name="item2">
                    <TabItem.Header>
                        <Image Source="/Resources;Component/image/home.png"  Width="0" Height="0" VerticalAlignment="Center"/>
                    </TabItem.Header>
                    <Grid>
                        <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Visible" HorizontalAlignment="Left" Style="{DynamicResource ScrollViewerStyle}">
                            <StackPanel Name="roomPan" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5" Orientation="Vertical">
                                <StackPanel.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </StackPanel.RenderTransform>
                            </StackPanel>                            
                        </ScrollViewer>
                    </Grid>
                </TabItem>
                <TabItem FocusVisualStyle="{x:Null}" Width="95" ToolTip="游戏专区">
                    <TabItem.Header>
                        <Image Source="/Resources;Component/image/gameHome.png"  Width="16" Height="16" VerticalAlignment="Center"/>
                    </TabItem.Header>
                    <Grid>
                        <ScrollViewer VerticalScrollBarVisibility="Auto" Style="{DynamicResource ScrollViewerStyle}">
                            <WrapPanel Width="290" Name="allGamePan" RenderTransformOrigin="0.5,0.5" Orientation="Horizontal">
                                <WrapPanel.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </WrapPanel.RenderTransform>
                            </WrapPanel>
                        </ScrollViewer>
                    </Grid>
                </TabItem>
                <TabItem FocusVisualStyle="{x:Null}" Width="92" ToolTip="论坛专区">
                    <TabItem.Header>
                        <Image Source="/Resources;Component/image/friend1.png"  Width="18" Height="18" VerticalAlignment="Center"/>
                    </TabItem.Header>
                    <Grid>
                        <ScrollViewer CanContentScroll="False" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                            <StackPanel  Name="pnfPanel">
                                <StackPanel.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </StackPanel.RenderTransform>
                                <Expander FocusVisualStyle="{x:Null}" Header="图片区" FontFamily="Microsoft YaHei" Name="expander1" VerticalAlignment="Top" Template="{DynamicResource SimpleExpanderTemp}" OverridesDefaultStyle="True" FontSize="12">
                                    <Grid>
                                        <StackPanel Name="picturePanel">
                                            <StackPanel.Background>
                                                <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                    <GradientStop Color="#B2FFFFFF" Offset="0"/>
                                                    <GradientStop Offset="1"/>
                                                    <GradientStop Color="#55FFFFFF" Offset="0.257"/>
                                                    <GradientStop Color="Transparent" Offset="0.493"/>
                                                </LinearGradientBrush>
                                            </StackPanel.Background>
                                        </StackPanel>
                                    </Grid>
                                </Expander>
                                <Expander FocusVisualStyle="{x:Null}" Header="电影区（请安装QVOD播放器）" FontFamily="Microsoft YaHei" Name="expander3" VerticalAlignment="Top" Template="{DynamicResource SimpleExpanderTemp}" OverridesDefaultStyle="True" FontSize="12">
                                    <Grid>
                                        <StackPanel Name="filmPanel">
                                            <StackPanel.Background>
                                                <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                    <GradientStop Color="#B2FFFFFF" Offset="0"/>
                                                    <GradientStop Offset="1"/>
                                                    <GradientStop Color="#55FFFFFF" Offset="0.257"/>
                                                    <GradientStop Color="Transparent" Offset="0.493"/>
                                                </LinearGradientBrush>
                                            </StackPanel.Background>
                                        </StackPanel>
                                    </Grid>
                                </Expander>
                                <Expander Header="AV导航" FontFamily="Microsoft YaHei" FocusVisualStyle="{x:Null}" Name="expander2" VerticalAlignment="Top" Template="{DynamicResource SimpleExpanderTemp}" OverridesDefaultStyle="True" FontSize="12">
                                    <Grid>
                                        <StackPanel Name="sitePanel">
                                            <StackPanel.Background>
                                                <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                    <GradientStop Color="#B2FFFFFF" Offset="0"/>
                                                    <GradientStop Offset="1"/>
                                                    <GradientStop Color="#55FFFFFF" Offset="0.257"/>
                                                    <GradientStop Color="Transparent" Offset="0.493"/>
                                                </LinearGradientBrush>
                                            </StackPanel.Background>
                                        </StackPanel>
                                    </Grid>
                                </Expander>
                            </StackPanel>
                        </ScrollViewer>
                    </Grid>
                </TabItem>
            </TabControl>
            <Grid VerticalAlignment="Bottom" Height="34" Background="Transparent">
                <!--<Canvas Margin="38,10,0,5.04" ClipToBounds="True" Name="canMain1" HorizontalAlignment="Left" Width="40">
                    <TextBlock x:Name="txtUserCount" Text="0人"  TextWrapping="NoWrap"  Foreground="Black" VerticalAlignment="Center" Margin="0,0,0,0"  Padding="3,0,0,0" HorizontalAlignment="Right" FontSize="12" Width="40"/>
                </Canvas>-->
                <Canvas Margin="40,7,31.0,5.04" ClipToBounds="True" Name="canMain">                    
                    <TextBlock Name="searchTextBox"  Text="" TextWrapping="Wrap" d:LayoutOverrides="Height" VerticalAlignment="Center" >
                        <TextBlock.Foreground>
                            <SolidColorBrush x:Name="txtInfo" Color="Maroon" />
                        </TextBlock.Foreground>
                        <TextBlock.Triggers>
                          <EventTrigger RoutedEvent="TextBlock.Loaded">
                            <BeginStoryboard>
                              <Storyboard>
                                <ColorAnimation 
                                  Storyboard.TargetName="txtInfo"
                                  Storyboard.TargetProperty="Color"
                                  From="Red" To="Blue" Duration="0:0:5"
                                  AutoReverse="True" RepeatBehavior="Forever" />
                              </Storyboard>
                            </BeginStoryboard>
                          </EventTrigger>
                        </TextBlock.Triggers>
                    </TextBlock>
                </Canvas>
                <Button x:Name="btnCamOrNotify" HorizontalAlignment="Right" Width="28" Height="28" d:LayoutOverrides="Width" Style="{DynamicResource MainPannel_Button}" VerticalAlignment="Center" Cursor="Hand">
                    <Image x:Name="imgCamOrNotify" Margin="0" Source="/Resources;component/image/msgmgr.png" Width="23" Height="23" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                </Button>
                <!--<Image HorizontalAlignment="Right" Margin="0,5,5,4" Width="25" Source="/Resources;component/image/search.gif" Stretch="Fill" Height="25" Cursor="Hand" MouseUp="Image_MouseUp_1" />-->
                <Menu Margin="7.659,0,0,0" HorizontalAlignment="Left" Width="33.333" VerticalAlignment="Bottom" Background="Transparent" Height="28.993">
                    <MenuItem Background="Transparent" Foreground="{x:Null}" Name="menuTools" Width="33.333" Style="{DynamicResource MenuItemStyle}" Template="{DynamicResource {ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" >
                        <MenuItem.Icon>
                            <Image Width="20" Height="20" Source="/Resources;component/image/icon1.gif" Margin="0,3,0,0" Stretch="Fill" HorizontalAlignment="Left" VerticalAlignment="Top" Cursor="Hand" />
                        </MenuItem.Icon>
                        <MenuItem Header="  个人资料" Background="{x:Null}" Foreground="Black" Click="MenuItem_Click_2">
                            <!--<MenuItem.Icon>
                                <Image Source="/Resources;component/image/menu2.gif" />
                            </MenuItem.Icon>-->
                        </MenuItem>
                        <MenuItem Header="  我的钱包" Background="{x:Null}" Foreground="Black" Click="MenuItem_Click_3">
                            <!--<MenuItem.Icon>
                                <Image Source="/Resources;component/image/menu2.gif" />
                            </MenuItem.Icon>-->
                        </MenuItem>
                        <MenuItem Header="  投诉" Background="{x:Null}" Foreground="Black" Click="MenuItem_Click_4">
                            <!--<MenuItem.Icon>
                                <Image Source="/Resources;component/image/menu5.gif" />
                            </MenuItem.Icon>-->
                        </MenuItem>
                        <MenuItem Header="  短消息" Background="{x:Null}" Foreground="Black" Click="MenuItem_Click_5">
                            <!--<MenuItem.Icon>
                                <Image Source="/Resources;component/image/menu6.gif" />
                            </MenuItem.Icon>-->
                        </MenuItem>
                        <Separator />
                        <MenuItem Header="  退出" Background="{x:Null}" Foreground="Black" Click="MenuItem_Click_1">
                            <!--<MenuItem.Icon>
                                <Image Source="/Resources;component/image/menu6.gif" />
                            </MenuItem.Icon>-->
                        </MenuItem>
                    </MenuItem>
                </Menu>
            </Grid>
        </Grid>
        <StackPanel x:Name="applicationButtonPannel1" Orientation="Horizontal" HorizontalAlignment="Left" Height="28" VerticalAlignment="Top" d:LayoutOverrides="HorizontalAlignment">
            <!--<TextBlock x:Name="txtTitle" Text="不夜城"  TextWrapping="NoWrap"  Foreground="Black" VerticalAlignment="Center" Margin="20,0,0,0" Padding="15,0,0,0" HorizontalAlignment="Center" FontSize="13" FontWeight="Bold" Width="70"/>-->
            <Label Name="titleName" Foreground="Blue" Margin="10,0,0,0" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Left" Content="不夜城" FontSize="14">
                <Label.Effect>
                    <DropShadowEffect Color="White" ShadowDepth="1" Direction="297" BlurRadius="7"/>
                </Label.Effect>
            </Label>
            <TextBlock x:Name="txtUserCount" Text=""  TextWrapping="Wrap"  Foreground="Black" VerticalAlignment="Center" Margin="0,0,0,0"  Padding="3,0,0,0" HorizontalAlignment="Right" FontSize="12"/>
        </StackPanel>
        
        <StackPanel x:Name="applicationButtonPannel" Orientation="Horizontal" HorizontalAlignment="Right" Height="28" VerticalAlignment="Top" d:LayoutOverrides="HorizontalAlignment">
            <Button  x:Name="btnMin" Content="" Margin="0" Width="25" HorizontalAlignment="Right" Height="18" Template="{DynamicResource Btnminimize_style}"  VerticalAlignment="Top" Click="btnMin_Click" />
            <Button  x:Name="btnClose" Content="" Margin="0" Width="38" HorizontalAlignment="Right" Height="18" Style="{DynamicResource Btnclosemize_style}" VerticalAlignment="Top" Click="btnClose_Click" />
        </StackPanel>
    </Grid>
</bs:BaseWindow>
